#include<stdio.h>
#include<stdlib.h>
#define N 5
int c=0;
struct node{
    int data;
    struct node *next;
};
struct node *head=NULL;
struct node *tail=NULL;
void insert();
void trasverse();
void delet();
int peek();
int main()
{
    int ch,n;
    while(1)
    {printf("1.ENQUEUE\n");
    printf("2.DEQUEUE\n");
    printf("3.PEEK\n");
    printf("4.TRASVERSE\n");
    printf("5.QUIT\n");
    printf("Enter your choice:-\n");
    scanf("%d",&ch);
    switch(ch)
{
    case 1:if(c==N)
    {
        printf("Queue is Full\n");
    }
    else{
        c++;
      insert();
    }
    break;
    case 2:delet();
    break;
    case 3:printf("%d\n",peek());
    break;
    case 4:trasverse();
    break;
    case 5:exit(0);
    default:printf("WRONG CHOICE!!\n");
}
}
}
void insert()
{
    struct node *temp;
    temp=(struct node *)malloc(sizeof(struct node));
    printf("Enter the data:-\n");
    scanf("%d",&temp->data);
    temp->next=NULL;
    if(head==NULL)
    {
        head=temp;
        tail=temp;
    }
    else{
        tail->next=temp;
        tail=temp;
    }

    
}
void trasverse()
{struct node*p=head;
    if(head==NULL)
    {
        printf("No element\n");
    }
    else{
        while(p!=NULL)
        {
        printf("%d ",p->data);
        p=p->next;
    }
    printf("\n");
}
}
void delet(){
    struct node*p=head;
    if(head==NULL)
    {
        printf("NO element\n");
    }
    else{
        head=head->next;
    }
}
int peek()
{
    if(head==NULL)
    {
        return 0;
    }
    else{
        return head->data;
    }
}

#include<stdio.h>
#include<stdlib.h>
void insert();
void add();
void deletesp();
void display();
void deleteall();
void length();
struct node
{
    int data;
    struct node*link;
};
struct node*root=NULL;
int len,c;
int main()
{
    int n;
    while(1)
    {
    printf("Enter your choice:-\n");
    printf("1.Insert node.\n");
    printf("2.Delete a node.\n");
    printf("3.Add at specific location.\n");
    printf("4.Delete the linked list.\n");
    printf("5.Display.\n");
    printf("6.Length.\n");
    printf("7.Quit.\n");
    scanf("%d",&n);
    switch(n)
    {
        case 1:insert();
        break;
        case 2:deletesp();
        break;
        case 3:add();
        break;
        case 4:deleteall();
        break;
        case 5:display();
        break;
        case 6:length();
        len=c;
        printf("Length is:-%d\n",len);
        break;
        case 7:exit(0);
        default:
        printf("Wrong choice bro!!!!\n");
        
    }


}
}
void insert()
{
    struct node*temp;
    temp=(struct node*)malloc(sizeof(struct node));
    printf("Enter the data:-\n");
    scanf("%d",&temp->data);
    temp->link=NULL;
    if(root==NULL)
    {
        root=temp;
    }
    else{
        struct node*p;
        p=root;
    while(p->link!=NULL)
    {
        p=p->link;
    }
    p->link=temp;
}
}
void display()
{
    struct node*p;
    p=root;
    if(root==NULL)
    {
        printf("Empty.\n");

    }
    else{
    while(p!=NULL)
    {
        printf("%d ",p->data);
        p=p->link;
    }
    printf("\n");
}
}
void length()
{ struct node*p;
    p=root;c=0;
    while(p!=NULL)
    {++c;
        p=p->link;
    }
    

}
void deletesp()
{struct node *temp;
    int n;
    printf("Enter the location:-");
    scanf("%d",&n);
    if(n>len)
    {
        printf("Invalid location.\n");
    }

        else if(n==1)
{
    temp=root;
    root=temp->link;
    temp->link=NULL;
    free(temp);
}
else{
    int i=1;struct node*p=root;
    struct node*q;
    while(i<n-1)
    {
        p=p->link;
        i++;
    }
    q=p->link;
    p->link=q->link;
    q->link=NULL;
    free(q);
}
}
void add()
{
    int n;int i=1;
    struct node*temp;
    struct node*p;
    temp=(struct node*)malloc(sizeof(struct node));
     printf("Enter the location:-");
    scanf("%d",&n);
    scanf("%d",&temp->data);
    temp->link=NULL;
   if(n>len)
    {
     printf("Invalid location.\n");
    }
    else{
            p=root;
        while(i<n-1)
        {
            p=p->link;i++;
        }
    
    temp->link=NULL;
    temp->link=p->link;
    p->link=temp;

    }
}
    void deleteall()
    {
        
          struct node*p=root;
          {
              while(root!=NULL)
              {
                  p=root;
                  root=root->link;
                  free(p);
              }
          }
        
    }

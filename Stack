#include<stdio.h>
#include<stdlib.h>
#define capacity 5
int stack[capacity];
int top=-1;
void push(int);
int pop();
int peek();
void trasverse();
int isfull();
int isempty(); 
void push(int ele)
{
  if(isfull())
  {
      printf("Stack is Full.\n");;
  }
  else{
      top++;
      stack[top]=ele;
      printf("%d inserted\n",ele);
  }
}
int pop()
{
    int ele;
    if(isempty())
    {
        printf("Empty.\n");
        return 0;
    }
    else{
        ele=stack[top];
        top--;
    }
    return top;
}
int peek()
{
    if(isempty())
    {
        return 0;
    }
    else{
        return stack[top];
    }
}
void trasverse()
{
        if(isempty())
        {
            printf("NO element\n");
        }
        else{
            for(int i=top;i>=0;i--)
            {
                printf("%d\n",stack[i]);
            }
        }
    
}
int isfull()
{int stack[capacity];
    if(top==capacity-1)
    {
      return 1;
    }
    else{
        return 0;
    }
}
int isempty()
{int stack[capacity];
    if(top==-1)
    {
        return 1;
    }
    else{
        return 0;
    }
}
int main()
{
    int ch,n;
    while(1)
    {printf("1.PUSH\n");
    printf("2.POP\n");
    printf("3.PEEK\n");
    printf("4.TRASVERSE\n");
    printf("5.QUIT\n");
    printf("Enter your choice:-\n");
    scanf("%d",&ch);
    switch(ch)
{
    case 1:int n;
    printf("Enter the element:-\n");
    scanf("%d",&n);
    push(n);
    break;
    case 2:pop();
    break;
    case 3:printf("%d\n",peek());
    break;
    case 4:trasverse();
    break;
    case 5:exit(0);
    default:printf("WRONG CHOICE!!");
}
}
}
